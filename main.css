:root {
  --offwhite: rgba(249, 249, 249, 1);
  --midBlack: #333333;
  --cream: #fffbe3;
  --lightBrown: #906124;
  --darkBrown: #714f23;
  --red: #fe3b45;
  --redDark: #e6353e;
  --green: #3bfe90;
  --greenDark: #35e681;
  --lightBlue: #f1fdff;
  --darkBlue: rgba(206, 229, 255, 1);
  --purple: #7016dd;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
}

body {
  background-color: var(--cream);
  min-width: 350px;
}

input {
  padding: 0.25rem 0.5rem;
}

button {
  display: inline-block;
  padding: 0.25rem 0.5rem;
  text-decoration: none;
  cursor: pointer;
  font-size: 16px;
  border: 1px solid lightgray;
  border-radius: 3px;
}

.table {
  position: relative;
  min-height: 100vh;
  background-color: var(--cream);
}

.wood {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  -webkit-box-shadow: 0px -10px 5px 0px rgba(51, 51, 51, 0.22);
  -moz-box-shadow: 0px -10px 5px 0px rgba(51, 51, 51, 0.22);
  box-shadow: 0px -10px 5px 0px rgba(51, 51, 51, 0.22);
}

@media screen and (orientation: landscape) and (max-width: 900px) and (max-height: 500px) {
  .wood {
    position: relative;
  }
}

.wood .wood-outwards,
.wood .wood-inwards {
  height: 50px;
}

.wood .wood-outwards {
  background-color: var(--lightBrown);
}

.wood .wood-inwards {
  background-color: var(--darkBrown);
  -webkit-box-shadow: inset 0px 10px 5px 0px rgba(51, 51, 51, 0.49);
  -moz-box-shadow: inset 0px 10px 5px 0px rgba(51, 51, 51, 0.49);
  box-shadow: inset 0px 10px 5px 0px rgba(51, 51, 51, 0.49);
}

.game-wrapper {
  position: relative;
  max-width: 1100px;
  min-height: 100vh;
  margin: auto;
}

@media screen and (min-width: 1000px) {
  .game-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-top: 0;
  }
}

.cards {
  height: 100%;
  min-height: 100%;
}

@media screen and (orientation: landscape) {
  .cards {
    padding: 0 0 200px 0;
  }
}

@media screen and (min-width: 1000px) {
  .cards {
    padding: 0;
  }
}

.cards .inner-container {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 3rem;
  max-width: 850px;
  min-height: 100vh;
  margin: 0 auto;
  padding: 100px 0 200px 0;
}

@media screen and (min-width: 1000px) {
  .cards .inner-container {
    padding: 200px 0;
  }
}

.dealer-cards,
.player-cards {
  display: inline-flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 0.5rem;
  height: 100px;
  padding: 0 1rem;
}

.player-cards {
  flex-wrap: wrap-reverse;
}

.dealer-cards.stacked,
.player-cards.stacked {
  gap: 0.25rem;
}

@media screen and (min-width: 767px) {
  .dealer-cards,
  .player-cards {
    height: 128px;
  }
}

.card,
.previous-card {
  display: inline-block;
  width: 70px;
  line-height: 0;
  font-size: 0;
}

@media screen and (min-width: 767px) {
  .card {
    width: 90px;
  }
}

@media screen and (min-width: 1000px) {
  .card {
    width: 110px;
  }
}

.card > img,
.previous-card > img {
  max-width: 100%;
}

.bottom-ui {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 160.5px;
  padding: 0.5rem 1rem;
  z-index: 1;
}

@media screen and (min-width: 1000px) {
  .bottom-ui {
    /* height: 250px; */
  }
}

/*
The bottom ui's inner container contains
the player's details and controls.
*/

.bottom-ui > .inner-container {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  max-width: 500px;
  margin: 0 auto;
  width: 100%;
  height: 100%;
  padding: 0.5rem 1rem;
  z-index: 1;
}

@media screen and (min-width: 1000px) {
  .bottom-ui > .inner-container {
    max-width: 100%;
    align-items: stretch;
    padding: 1rem 1rem;
  }
}

.bottom-ui > .inner-container #game-details {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

@media screen and (min-width: 1000px) {
  .bottom-ui > .inner-container #game-details {
    flex-direction: row;
    align-items: stretch;
    max-width: 100%;
  }
  .bottom-ui > .inner-container #game-details > section:first-of-type {
    flex: 2;
  }
  .bottom-ui > .inner-container #game-details > section:last-of-type {
    flex: 1;
  }

  .game-message,
  .game-message .inner-container,
  .player-details,
  .player-details .inner-container {
    height: 100%;
  }
}

/*
The game message displays current game details, ie current round 
details, round outcomes, betting ui, etc.
*/

.game-message {
  border-radius: 5px;
  -webkit-box-shadow: 0px 10px 5px 0px rgba(51, 51, 51, 0.25);
  -moz-box-shadow: 0px 10px 5px 0px rgba(51, 51, 51, 0.25);
  box-shadow: 0px 10px 5px 0px rgba(51, 51, 51, 0.25);
}

.game-message > .inner-container {
  display: flex;
  flex-direction: column;
  gap: 0.4rem;
  padding: 0.5rem 0.5rem;
  background: var(--darkBlue);
  background: linear-gradient(180deg, var(--darkBlue) 0%, var(--offwhite) 50%);
  border-radius: 5px;
}

@media screen and (min-width: 1000px) {
  .game-message > .inner-container {
    padding: 1rem;
  }
}

.game-message .top,
.game-message .bottom {
  color: #7016dd;
}

.game-message .bottom {
  display: inline-block;
}

.betting-ui .bet-input {
  font-size: 16px;
}

.betting-ui.removed {
  display: none;
}

.keep-playing-buttons {
  display: none;
  gap: 0.5rem;
}

.keep-playing-buttons.visible {
  display: inline-flex;
}

.restart-button {
  display: none;
}
.restart-button.visible {
  display: inline-block;
}

/* 
Player details display the player's current bet and
their cash left.
*/

.bottom-ui > .inner-container .player-details {
  border-radius: 5px;
  -webkit-box-shadow: 0px 10px 5px 0px rgba(51, 51, 51, 0.25);
  -moz-box-shadow: 0px 10px 5px 0px rgba(51, 51, 51, 0.25);
  box-shadow: 0px 10px 5px 0px rgba(51, 51, 51, 0.25);
}

.bottom-ui > .inner-container .player-details .inner-container {
  display: flex;
  justify-content: space-between;
  padding: 0.5rem 0.5rem;
  border-radius: 5px;
  /* border: 1px solid var(--darkBlue); */
  background: var(--darkBlue);
  background: linear-gradient(180deg, var(--darkBlue) 0%, var(--offwhite) 50%);
}

@media screen and (min-width: 1000px) {
  .bottom-ui > .inner-container .player-details .inner-container {
    padding: 1rem;
  }
}

.bottom-ui .player-details .player-bet,
.bottom-ui .player-details .player-cash {
  display: flex;
  flex-direction: column;
  gap: 5px;
  color: var(--purple);
}

/* 
Player controls are the STAND and HIT buttons.
*/

#player-controls {
  visibility: hidden;
}

#player-controls.is-visible {
  visibility: visible;
}

#player-controls .controls .inner-container {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  gap: 0.75rem;
  padding-left: 1rem;
}

@media screen and (min-width: 1000px) {
  #player-controls .controls,
  #player-controls .controls .inner-container {
    height: 100%;
  }
  #player-controls .controls .inner-container {
    flex-direction: row;
  }
}

#player-controls .controls .button {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 70px;
  height: 70px;
  border-radius: 50%;
  -webkit-box-shadow: 0px 5px 5px 0px rgba(51, 51, 51, 0.49);
  -moz-box-shadow: 0px 5px 5px 0px rgba(51, 51, 51, 0.49);
  box-shadow: 0px 5px 5px 0px rgba(51, 51, 51, 0.49);
}

#player-controls .controls .button:hover {
  cursor: pointer;
}

@media screen and (min-width: 1000px) {
  #player-controls .controls .button {
    width: 90px;
    height: 90px;
    font-size: 20px;
  }
}

#player-controls .controls .button.stand > span {
  color: var(--offwhite);
}
#player-controls .controls .button.hit > span {
  color: var(--purple);
}

#player-controls .controls .button > span {
  display: inline-block;
  font-size: 16px;
  font-weight: 900;
  line-height: 20px;
}

@media screen and (min-width: 1000px) {
  #player-controls .controls .button > span {
    font-size: 20px;
  }
}

#player-controls .controls .button.stand {
  background-color: var(--red);
}
#player-controls .controls .button.stand:hover {
  background-color: var(--redDark);
}

#player-controls .controls .button.hit {
  background-color: var(--green);
}
#player-controls .controls .button.hit:hover,
#player-controls .controls .button.hit:hover > span {
  background-color: var(--greenDark);
  color: var(--offwhite);
}
